import yargs from 'yargs'
import { z } from 'zod'
import icon_dump from './icon_inventory.json' assert { type: 'json' }
import shell from 'shelljs'
type IconIDS = keyof typeof icon_dump.graphs
export const icons = (id: IconIDS) => {
    const icon_inventory: typeof icon_dump = JSON.parse(
        JSON.stringify(icon_dump, undefined, 4)
    )
    return icon_inventory.graphs[id].attributes.icon
}

//idk it wont let me do this dynamically
const iconsEnum = [
    'value_processor',
    'color',
    'grayscale',
    'align',
    'scale',
    'value_processor_orange',
] as const

const getIcon = () => {
    const argsSchema = z.object({
        id: z.enum(iconsEnum),
    })
    const getArgsObject = (value = process.argv) => yargs(value).argv
    const unparsedArgs = getArgsObject()

    if (argsSchema.safeParse(unparsedArgs).success) {
        const parsedArgs = argsSchema.parse(unparsedArgs)
        ///  const test = shell.exec('pbcopy', {silent:false}).stdin =icons(parsedArgs.id) ;
        console.log(icons(parsedArgs.id))
    } else {
        console.error('Error: icon not found', getArgsObject)
    }
}

getIcon()

/*
function pbcopy(data) {
    var proc = require('child_process').spawn('pbcopy');
    proc.stdin.write(data);
    proc.stdin.end();
}

> @gbt/sat-scripts@0.0.0 icons /Users/gilliantunney/gh_repos/SNAILICIDE/gbt-substance2023/packages/sat-scripts
>  ts-node --esm ./src/icon/getIcon.ts "--id" "grayscale"



*/
